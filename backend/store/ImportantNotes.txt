Remember

Python library contains the database which is exported onto the site
    Data contained in objects instanced by classes/methods
Cart information is stored in the following:
    Guest Cart: Cookies
    User logged in: Cookies (for when user closed page) and Python database (should match)
        Confirm by inspect and check Cookies

    Cart Information via backend

Cart Load Steps:

    Cart is generated as dictionary by JSON.parse(getCookie) function within javascript
    Stores cart cookie using document.cookie='name',JSON.stringify(variable), and path
    Java Event Handler detects that button is pressed for adding or removing items in Cart
    Java calls UpdateUserOrder function which loads cart information and then sends data to URL views which then calls Python
    Python converts Java product/action data using JSON method database uses these as parameters to update Django database (MUST SAVE OR DELETE)
    Java Updates Cart Dictionary and stores information as new cookie

PYTHON TO JAVA/HTML VARIABLES

Python: Cart when imported from JAVA through json request.body method, stored as DICTIONARY {}
When called into HTML, python values within dictionaries are called as values: Example: Python- order[product][id] | HTML - order.product.id | Java, imported from HTML so same as HTML
JAVA: Dictionaries {} created in Java are called by using attribute convention such as order.product.id. Makes sense that it follows HTML since JAVA is most popularly used for website development.
Import Variable Process:
    HTML: input tag with {{python variable HTML attribute convention}} 
    Java within HTML page: var = '{{python variable HTML attribute convention}}' 
    Java as standalone js file: var ______ =document.getElementby__.Value (Final Build in Process)
    
    




