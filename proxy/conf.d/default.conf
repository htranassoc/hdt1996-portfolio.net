

upstream nodes {
    ip_hash;
    server 192.168.1.17:8010;
    server 192.168.1.17:8011;
    server 192.168.1.17:8012;
    server 192.168.1.17:8013;
}

upstream peers{
    ip_hash;
    server 192.168.1.17:8020;
    server 192.168.1.17:8021;
    server 192.168.1.17:8022;
    server 192.168.1.17:8023;
}

upstream ws{
    ip_hash;
    server 192.168.1.17:8030;
    server 192.168.1.17:8031;
    server 192.168.1.17:8032;
    server 192.168.1.17:8033;
}


upstream ouroni{
    ip_hash;
    server 192.168.1.107:80;
}




map $http_origin $allow_origin {
    ~^https?://(.*\.)?192.168.1.17(:\d+)?$ $http_origin;
    ~^https?://(.*\.)?www.192.168.1.17(:\d+)?$ $http_origin;
    ~^https?://(.*\.)?$host(:\d+)?$ $http_origin;
    ~^https?://(.*\.)?192.168.1.107(:\d+)?$ $http_origin;
    ~^https?://(.*\.)?192.168.1.188(:\d+)?$ $http_origin;
    ~^https?://(.*\.)?localhost(:\d+)?$ $http_origin;
    default "";
}

server{
    listen 443 ssl;
    
    server_name 192.168.1.17;
    include mime.types;

    ssl_certificate /etc/nginx/certs/cert_p1.pem;
    ssl_certificate_key /etc/nginx/certs/key_p1.pem;

#    ssl_session_cache shared:SSL:100m;
    ssl_session_timeout 15m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    proxy_ssl_session_reuse on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;


    location /static/ {
    add_header Access-Control-Allow-Origin $allow_origin;
    alias /vol/static/;
    add_header X-debug-message "$uri /static/" always;
    }

    location /videos/ {
    add_header Access-Control-Allow-Origin $allow_origin;       
    alias /vol/videos/;
    add_header X-debug-message "$uri /videos/" always;
    }


    location /media/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/media/;
    add_header X-debug-message "$uri /media/" always;
    }

    location /react/static/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/static/;
    add_header X-debug-message "$uri /react/static/" always;
    }


    location /react/images/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/images/;
    add_header X-debug-message "$uri /react/images/" always;
    }

    location /react/videos/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/videos/;
    try_files $uri $uri/ =404;
    add_header X-debug-message "$uri /react/videos/" always;
    }

    location ~* ^/react/(?!static|images|videos|favicon.ico).*$ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/;
    try_files /index.html =404;
    add_header X-debug-message "$host $uri Slug HTTPS Proxy" always;
    }  

    location ~* ^/socket.io/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass https://nodes;
    add_header X-debug-message "$uri HTTPS Proxy nodes /socket.io/" always;
    }

    location ~* ^/peerjs/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass https://peers;
    add_header X-debug-message "$uri HTTPS Proxy nodes /peerjs/" always;
    }

    location ~* ^/ws/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_pass https://ws;
    add_header X-debug-message "$uri HTTPS Proxy nodes /ws/" always;
    }

    location ~* ^/forward/ouroni {
    proxy_pass http://ouroni;
    proxy_set_header Host $host;
    add_header X-debug-message "$uri / ouroni Proxy" always;
    }

    location  /favicon.ico {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/;
    try_files /favicon.ico =404;
    add_header X-debug-message "$uri / Favicon HTTPS Proxy" always;
    }

    location / {
    uwsgi_pass web:8000;
    # proxy_ssl_certificate /etc/nginx/certs/cert_p1.pem;
    #proxy_ssl_certificate_key /etc/nginx/certs/key_p1.pem;  
    proxy_redirect     off;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    include /etc/nginx/uwsgi_params;
    add_header X-debug-message "$uri / Django HTTPS Proxy" always;
    }
}

server{
    listen 8001;
    listen [::]:8001;
    
    server_name $host;
    include mime.types;


    location /static/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/static/;
    add_header X-debug-message "$uri /static/" always;
    }

    location /videos/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/videos/;
    add_header X-debug-message "$uri /videos/" always;
    }

    location /media/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/media/;
    add_header X-debug-message "$uri /media/" always;
    }

    location /react/static/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/static/;
    add_header X-debug-message "$uri /react/static/" always;
    }

    location /react/images/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/images/;
    try_files $uri $uri/ =404;
    add_header X-debug-message "$uri /react/images/" always;
    }

    location /react/videos/ {
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/videos/;
    try_files $uri $uri/ =404;
    add_header X-debug-message "$uri /react/videos/" always;
    }

  
    location ~* ^/react/(?!static|images|videos).*$ { 
    add_header Access-Control-Allow-Origin $allow_origin; 
    alias /vol/react/;
    try_files /index.html =404;
    add_header X-debug-message "$host $uri Slug HTTP Proxy" always;
    }  

    location ~* ^/socket.io/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass https://nodes;
    add_header X-debug-message "$uri HTTP Proxy nodes /socket.io/" always;
    }

    location ~* ^/peerjs/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass https://peers;
    add_header X-debug-message "$uri HTTP Proxy nodes /peerjs/" always;
    }

    location ~* ^/ws/{
    add_header Access-Control-Allow-Origin $allow_origin;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_pass https://ws;
    add_header X-debug-message "$uri HTTP Proxy nodes /ws/" always;
    }

    location / {
    uwsgi_pass web:8000;
    include /etc/nginx/uwsgi_params;
    add_header X-debug-message "$uri / HTTP Proxy django" always;
    }
}
